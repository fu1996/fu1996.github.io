<svg id="kity_svg_6" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="748" height="2397" style="background: rgb(251, 251, 251); visibility: visible;" viewBox="0 0 748 2397"><defs id="kity_defs_7"><linearGradient id="kity_linearGradient_17" x1="0" y1="0" x2="0" y2="1"><stop id="kity_stop_18" offset="0" stop-color="rgb(255, 255, 255)"></stop><stop id="kity_stop_19" offset="1" stop-color="rgb(204, 204, 204)"></stop></linearGradient><marker id="kity_marker_2" orient="auto" refX="6" refY="0" viewBox="-7 -7 14 14" markerWidth="7" markerHeight="7" markerUnits="userSpaceOnUse"><path id="kity_path_3" fill="rgb(115, 161, 191)" stroke="none" d="M6,0A6,6,0,1,1,-6,0A6,6,0,1,1,6,0"></path></marker></defs><g id="kity_g_8"><g id="minder1" text-rendering="optimize-speed"><g id="minder_connect_group1"><path id="kity_path_31" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,1165,0,0,1,232.50002831965685,32.50005120784044"></path><path id="kity_path_40" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,1099,0,0,1,232.50002831965685,98.50005120784044"></path><path id="kity_path_48" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,1033,0,0,1,232.50002831965685,164.50005120784044"></path><path id="kity_path_56" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,967,0,0,1,232.50002831965685,230.50005120784044"></path><path id="kity_path_64" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,901,0,0,1,232.50002831965685,296.50005120784044"></path><path id="kity_path_72" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,824.5,0,0,1,232.50002831965685,373.00005120784044"></path><path id="kity_path_81" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,748,0,0,1,232.50002831965685,449.50005120784044"></path><path id="kity_path_89" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,682,0,0,1,232.50002831965685,515.5000512078404"></path><path id="kity_path_97" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,616,0,0,1,232.50002831965685,581.5000512078404"></path><path id="kity_path_105" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,550,0,0,1,232.50002831965685,647.5000512078404"></path><path id="kity_path_113" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,484,0,0,1,232.50002831965685,713.5000512078404"></path><path id="kity_path_121" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,418,0,0,1,232.50002831965685,779.5000512078404"></path><path id="kity_path_129" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,352,0,0,1,232.50002831965685,845.5000512078404"></path><path id="kity_path_137" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,286,0,0,1,232.50002831965685,911.5000512078404"></path><path id="kity_path_145" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,220,0,0,1,232.50002831965685,977.5000512078404"></path><path id="kity_path_153" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,154,0,0,1,232.50002831965685,1043.5000512078404"></path><path id="kity_path_161" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,88,0,0,1,232.50002831965685,1109.5000512078404"></path><path id="kity_path_169" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,22,0,0,1,232.50002831965685,1175.5000512078404"></path><path id="kity_path_177" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,44,0,0,0,232.50002831965685,1241.5000512078404"></path><path id="kity_path_185" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,110,0,0,0,232.50002831965685,1307.5000512078404"></path><path id="kity_path_193" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,176,0,0,0,232.50002831965685,1373.5000512078404"></path><path id="kity_path_201" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,242,0,0,0,232.50002831965685,1439.5000512078404"></path><path id="kity_path_209" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,308,0,0,0,232.50002831965685,1505.5000512078404"></path><path id="kity_path_217" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,374,0,0,0,232.50002831965685,1571.5000512078404"></path><path id="kity_path_225" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,440,0,0,0,232.50002831965685,1637.5000512078404"></path><path id="kity_path_233" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,506,0,0,0,232.50002831965685,1703.5000512078404"></path><path id="kity_path_241" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,572,0,0,0,232.50002831965685,1769.5000512078404"></path><path id="kity_path_249" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,638,0,0,0,232.50002831965685,1835.5000512078404"></path><path id="kity_path_257" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,704,0,0,0,232.50002831965685,1901.5000512078404"></path><path id="kity_path_265" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,770,0,0,0,232.50002831965685,1967.5000512078404"></path><path id="kity_path_273" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,836,0,0,0,232.50002831965685,2033.5000512078404"></path><path id="kity_path_281" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,902,0,0,0,232.50002831965685,2099.5000512078404"></path><path id="kity_path_289" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,968,0,0,0,232.50002831965685,2165.5000512078404"></path><path id="kity_path_297" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,1034,0,0,0,232.50002831965685,2231.5000512078404"></path><path id="kity_path_305" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,1100,0,0,0,232.50002831965685,2297.5000512078404"></path><path id="kity_path_313" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M67.50002831965685,1197.5000512078404A165,1166,0,0,0,232.50002831965685,2363.5000512078404"></path></g><g id="minder_node1"><path id="node_outline1" fill="rgb(115, 161, 191)" stroke="rgb(115, 161, 191)" d="M25.50002831965685,1177.5000512078404h84a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-84a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text1" fill="white"><text id="kity_text_22" text-rendering="inherit" font-size="16" dy=".8em" y="1187.1000509370651" x="44.50002831965685">js真题</text></g></g><g id="kity_g_12"><path id="kity_path_13" fill="none" stroke="none" d="M44.50002831965685,1197.5000512078404h0v0h0z"></path></g><g id="kity_g_14"><path id="kity_path_15" fill="none" stroke="none" d="M44.50002831965685,1197.5000512078404h0v0h0z"></path><path id="kity_path_16" fill="none" stroke="none"></path></g><g id="minder_node2"><g id="node_expander1" style="cursor: pointer;" display="none"><path id="kity_path_36" fill="white" stroke="gray" d="M233.50003650039434,32.49999912828207A6,6,0,1,1,221.50003650039434,32.49999912828207A6,6,0,1,1,233.50003650039434,32.49999912828207"></path><path id="kity_path_37" fill="none" stroke="gray"></path></g><path id="node_outline2" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,19.49999912828207h174a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-174a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text2" fill="black"><text id="kity_text_33" text-rendering="inherit" font-size="14" dy=".8em" y="23.399999197891788" x="254.5000377073884">1.var let const 的区别</text></g></g><g id="minder_node3"><g id="node_expander2" style="cursor: pointer;" display="none"><path id="kity_path_45" fill="white" stroke="gray" d="M233.50003650039434,98.50000207871199A6,6,0,1,1,221.50003650039434,98.50000207871199A6,6,0,1,1,233.50003650039434,98.50000207871199"></path><path id="kity_path_46" fill="none" stroke="gray"></path></g><path id="node_outline3" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,85.50000207871199h191a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-191a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text3" fill="black"><text id="kity_text_42" text-rendering="inherit" font-size="14" dy=".8em" y="89.4000021483217" x="254.5000377073884">2.typeof 会返回哪些类型 </text></g></g><g id="minder_node4"><g id="node_expander3" style="cursor: pointer;" display="none"><path id="kity_path_53" fill="white" stroke="gray" d="M233.50003650039434,164.5000050291419A6,6,0,1,1,221.50003650039434,164.5000050291419A6,6,0,1,1,233.50003650039434,164.5000050291419"></path><path id="kity_path_54" fill="none" stroke="gray"></path></g><path id="node_outline4" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,151.5000050291419h256a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-256a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text4" fill="black"><text id="kity_text_50" text-rendering="inherit" font-size="14" dy=".8em" y="155.40000509875162" x="254.5000377073884">3.列举强制类型转换和隐式类型转换</text></g></g><g id="minder_node5"><g id="node_expander4" style="cursor: pointer;" display="none"><path id="kity_path_61" fill="white" stroke="gray" d="M233.50003650039434,230.50000797957182A6,6,0,1,1,221.50003650039434,230.50000797957182A6,6,0,1,1,233.50003650039434,230.50000797957182"></path><path id="kity_path_62" fill="none" stroke="gray"></path></g><path id="node_outline5" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,217.50000797957182h280a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-280a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text5" fill="black"><text id="kity_text_58" text-rendering="inherit" font-size="14" dy=".8em" y="221.40000804918154" x="254.5000377073884">4.手写深度比较 模拟 loadsh 的 isEqual</text></g></g><g id="minder_node6"><g id="node_expander5" style="cursor: pointer;" display="none"><path id="kity_path_69" fill="white" stroke="gray" d="M233.50003650039434,296.50001093000174A6,6,0,1,1,221.50003650039434,296.50001093000174A6,6,0,1,1,233.50003650039434,296.50001093000174"></path><path id="kity_path_70" fill="none" stroke="gray"></path></g><path id="node_outline6" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,283.50001093000174h186a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-186a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text6" fill="black"><text id="kity_text_66" text-rendering="inherit" font-size="14" dy=".8em" y="287.4000109996115" x="254.5000377073884">5.split() 和 join() 的区别</text></g></g><g id="minder_node7"><g id="node_expander6" style="cursor: pointer;" display="none"><path id="kity_path_77" fill="white" stroke="gray" d="M233.50003650039434,373.00001434981823A6,6,0,1,1,221.50003650039434,373.00001434981823A6,6,0,1,1,233.50003650039434,373.00001434981823"></path><path id="kity_path_78" fill="none" stroke="gray"></path></g><path id="node_outline7" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,349.5000143274665h327a3,3,0,0,1,3,3v41a3,3,0,0,1,-3,3h-327a3,3,0,0,1,-3,-3v-41a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text7" fill="black"><text id="kity_text_74" text-rendering="inherit" font-size="14" dy=".8em" y="352.90001439707623" x="254.5000377073884">6.数组的 pop push unshift shift 分别做什么？</text><text id="kity_text_79" text-rendering="inherit" font-size="14" dy=".8em" y="373.90001439707623" x="254.5000377073884">主题</text></g></g><g id="minder_node8"><g id="node_expander7" style="cursor: pointer;" display="none"><path id="kity_path_86" fill="white" stroke="gray" d="M233.50003650039434,449.5000177696347A6,6,0,1,1,221.50003650039434,449.5000177696347A6,6,0,1,1,233.50003650039434,449.5000177696347"></path><path id="kity_path_87" fill="none" stroke="gray"></path></g><path id="node_outline8" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,436.5000177696347h488a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-488a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text8" fill="black"><text id="kity_text_83" text-rendering="inherit" font-size="14" dy=".8em" y="440.40001783924447" x="254.5000377073884">7.数组的哪些API是纯函数【不改变原数组（没有副作用），返回新数组】</text></g></g><g id="minder_node9"><g id="node_expander8" style="cursor: pointer;" display="none"><path id="kity_path_94" fill="white" stroke="gray" d="M233.50003650039434,515.5000207200646A6,6,0,1,1,221.50003650039434,515.5000207200646A6,6,0,1,1,233.50003650039434,515.5000207200646"></path><path id="kity_path_95" fill="none" stroke="gray"></path></g><path id="node_outline9" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,502.50002072006464h209a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-209a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text9" fill="black"><text id="kity_text_91" text-rendering="inherit" font-size="14" dy=".8em" y="506.4000207896744" x="254.5000377073884">8.数组slice 和 splice 的区别</text></g></g><g id="minder_node10"><g id="node_expander9" style="cursor: pointer;" display="none"><path id="kity_path_102" fill="white" stroke="gray" d="M233.50003650039434,581.5000236704946A6,6,0,1,1,221.50003650039434,581.5000236704946A6,6,0,1,1,233.50003650039434,581.5000236704946"></path><path id="kity_path_103" fill="none" stroke="gray"></path></g><path id="node_outline10" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,568.5000236704946h407a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-407a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text10" fill="black"><text id="kity_text_99" text-rendering="inherit" font-size="14" dy=".8em" y="572.4000237401043" x="254.5000377073884">9.[10,20,30].map(parseIne)返回的结果是什么？【网红题】</text></g></g><g id="minder_node11"><g id="node_expander10" style="cursor: pointer;" display="none"><path id="kity_path_110" fill="white" stroke="gray" d="M233.50003650039434,647.5000266209245A6,6,0,1,1,221.50003650039434,647.5000266209245A6,6,0,1,1,233.50003650039434,647.5000266209245"></path><path id="kity_path_111" fill="none" stroke="gray"></path></g><path id="node_outline11" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,634.5000266209245h272a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-272a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text11" fill="black"><text id="kity_text_107" text-rendering="inherit" font-size="14" dy=".8em" y="638.4000266905342" x="254.5000377073884">10.Ajax的get 和 post 的请求的区别？</text></g></g><g id="minder_node12"><g id="node_expander11" style="cursor: pointer;" display="none"><path id="kity_path_118" fill="white" stroke="gray" d="M233.50003650039434,713.5000295713544A6,6,0,1,1,221.50003650039434,713.5000295713544A6,6,0,1,1,233.50003650039434,713.5000295713544"></path><path id="kity_path_119" fill="none" stroke="gray"></path></g><path id="node_outline12" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,700.5000295713544h213a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-213a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text12" fill="black"><text id="kity_text_115" text-rendering="inherit" font-size="14" dy=".8em" y="704.4000296409641" x="254.5000377073884">11.函数 call 和 apply 的区别</text></g></g><g id="minder_node13"><g id="node_expander12" style="cursor: pointer;" display="none"><path id="kity_path_126" fill="white" stroke="gray" d="M233.50003650039434,779.5000325217843A6,6,0,1,1,221.50003650039434,779.5000325217843A6,6,0,1,1,233.50003650039434,779.5000325217843"></path><path id="kity_path_127" fill="none" stroke="gray"></path></g><path id="node_outline13" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,766.5000325217843h226a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-226a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text13" fill="black"><text id="kity_text_123" text-rendering="inherit" font-size="14" dy=".8em" y="770.400032591394" x="254.5000377073884">12. 事件代理（委托）是什么？</text></g></g><g id="minder_node14"><g id="node_expander13" style="cursor: pointer;" display="none"><path id="kity_path_134" fill="white" stroke="gray" d="M233.50003650039434,845.5000354722142A6,6,0,1,1,221.50003650039434,845.5000354722142A6,6,0,1,1,233.50003650039434,845.5000354722142"></path><path id="kity_path_135" fill="none" stroke="gray"></path></g><path id="node_outline14" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,832.5000354722142h334a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-334a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text14" fill="black"><text id="kity_text_131" text-rendering="inherit" font-size="14" dy=".8em" y="836.400035541824" x="254.5000377073884">13.闭包是什么？有什么特性？有什么负面影响？</text></g></g><g id="minder_node15"><g id="node_expander14" style="cursor: pointer;" display="none"><path id="kity_path_142" fill="white" stroke="gray" d="M233.50003650039434,911.5000384226441A6,6,0,1,1,221.50003650039434,911.5000384226441A6,6,0,1,1,233.50003650039434,911.5000384226441"></path><path id="kity_path_143" fill="none" stroke="gray"></path></g><path id="node_outline15" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,898.5000384226441h250a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-250a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text15" fill="black"><text id="kity_text_139" text-rendering="inherit" font-size="14" dy=".8em" y="902.4000384922539" x="254.5000377073884">14.如何阻止事件冒泡和默认行为？</text></g></g><g id="minder_node16"><g id="node_expander15" style="cursor: pointer;" display="none"><path id="kity_path_150" fill="white" stroke="gray" d="M233.50003650039434,977.500041373074A6,6,0,1,1,221.50003650039434,977.500041373074A6,6,0,1,1,233.50003650039434,977.500041373074"></path><path id="kity_path_151" fill="none" stroke="gray"></path></g><path id="node_outline16" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,964.500041373074h328a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-328a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text16" fill="black"><text id="kity_text_147" text-rendering="inherit" font-size="14" dy=".8em" y="968.4000414426838" x="254.5000377073884">15.查找、添加、删除和移动DOM节点的方法？</text></g></g><g id="minder_node17"><g id="node_expander16" style="cursor: pointer;" display="none"><path id="kity_path_158" fill="white" stroke="gray" d="M233.50003650039434,1043.500044323504A6,6,0,1,1,221.50003650039434,1043.500044323504A6,6,0,1,1,233.50003650039434,1043.500044323504"></path><path id="kity_path_159" fill="none" stroke="gray"></path></g><path id="node_outline17" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,1030.500044323504h286a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-286a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text17" fill="black"><text id="kity_text_155" text-rendering="inherit" font-size="14" dy=".8em" y="1034.4000443931136" x="254.5000377073884">16.如何减少DOM的操作？【性能优化】</text></g></g><g id="minder_node18"><g id="node_expander17" style="cursor: pointer;" display="none"><path id="kity_path_166" fill="white" stroke="gray" d="M233.50003650039434,1109.500047273934A6,6,0,1,1,221.50003650039434,1109.500047273934A6,6,0,1,1,233.50003650039434,1109.500047273934"></path><path id="kity_path_167" fill="none" stroke="gray"></path></g><path id="node_outline18" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,1096.500047273934h337a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-337a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text18" fill="black"><text id="kity_text_163" text-rendering="inherit" font-size="14" dy=".8em" y="1100.4000473435435" x="254.5000377073884">17.解释jsonp 的原理，为何 它不是真正的Ajax？</text></g></g><g id="minder_node19"><g id="node_expander18" style="cursor: pointer;" display="none"><path id="kity_path_174" fill="white" stroke="gray" d="M233.50003650039434,1175.5000502243638A6,6,0,1,1,221.50003650039434,1175.5000502243638A6,6,0,1,1,233.50003650039434,1175.5000502243638"></path><path id="kity_path_175" fill="none" stroke="gray"></path></g><path id="node_outline19" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,1162.5000502243638h257a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-257a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text19" fill="black"><text id="kity_text_171" text-rendering="inherit" font-size="14" dy=".8em" y="1166.4000502939734" x="254.5000377073884">18.document load 和 ready的区别</text></g></g><g id="minder_node20"><g id="node_expander19" style="cursor: pointer;" display="none"><path id="kity_path_182" fill="white" stroke="gray" d="M233.50003650039434,1241.5000531747937A6,6,0,1,1,221.50003650039434,1241.5000531747937A6,6,0,1,1,233.50003650039434,1241.5000531747937"></path><path id="kity_path_183" fill="none" stroke="gray"></path></g><path id="node_outline20" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,1228.5000531747937h291a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-291a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text20" fill="black"><text id="kity_text_179" text-rendering="inherit" font-size="14" dy=".8em" y="1232.4000532444034" x="254.5000377073884">19. == 和 === 的区别，以及使用的场景</text></g></g><g id="minder_node21"><g id="node_expander20" style="cursor: pointer;" display="none"><path id="kity_path_190" fill="white" stroke="gray" d="M233.50003650039434,1307.5000561252236A6,6,0,1,1,221.50003650039434,1307.5000561252236A6,6,0,1,1,233.50003650039434,1307.5000561252236"></path><path id="kity_path_191" fill="none" stroke="gray"></path></g><path id="node_outline21" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,1294.5000561252236h250a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-250a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text21" fill="black"><text id="kity_text_187" text-rendering="inherit" font-size="14" dy=".8em" y="1298.4000561948333" x="254.5000377073884">20.函数声明和函数表达式的区别？</text></g></g><g id="minder_node22"><g id="node_expander21" style="cursor: pointer;" display="none"><path id="kity_path_198" fill="white" stroke="gray" d="M233.50003650039434,1373.5000590756536A6,6,0,1,1,221.50003650039434,1373.5000590756536A6,6,0,1,1,233.50003650039434,1373.5000590756536"></path><path id="kity_path_199" fill="none" stroke="gray"></path></g><path id="node_outline22" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,1360.5000590756536h275a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-275a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text22" fill="black"><text id="kity_text_195" text-rendering="inherit" font-size="14" dy=".8em" y="1364.4000591452632" x="254.5000377073884">21.new Object() 和 Object.this的区别</text></g></g><g id="minder_node23"><g id="node_expander22" style="cursor: pointer;" display="none"><path id="kity_path_206" fill="white" stroke="gray" d="M233.50003650039434,1439.5000620260835A6,6,0,1,1,221.50003650039434,1439.5000620260835A6,6,0,1,1,233.50003650039434,1439.5000620260835"></path><path id="kity_path_207" fill="none" stroke="gray"></path></g><path id="node_outline23" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,1426.5000620260835h166a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-166a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text23" fill="black"><text id="kity_text_203" text-rendering="inherit" font-size="14" dy=".8em" y="1430.400062095693" x="254.5000377073884">22.关于this 的场景题</text></g></g><g id="minder_node24"><g id="node_expander23" style="cursor: pointer;" display="none"><path id="kity_path_214" fill="white" stroke="gray" d="M233.50003650039434,1505.5000649765134A6,6,0,1,1,221.50003650039434,1505.5000649765134A6,6,0,1,1,233.50003650039434,1505.5000649765134"></path><path id="kity_path_215" fill="none" stroke="gray"></path></g><path id="node_outline24" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,1492.5000649765134h310a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-310a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text24" fill="black"><text id="kity_text_211" text-rendering="inherit" font-size="14" dy=".8em" y="1496.400065046123" x="254.5000377073884">23.关于作用域和自由变量的场景题 【两个】</text></g></g><g id="minder_node25"><g id="node_expander24" style="cursor: pointer;" display="none"><path id="kity_path_222" fill="white" stroke="gray" d="M233.50003650039434,1571.5000679269433A6,6,0,1,1,221.50003650039434,1571.5000679269433A6,6,0,1,1,233.50003650039434,1571.5000679269433"></path><path id="kity_path_223" fill="none" stroke="gray"></path></g><path id="node_outline25" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,1558.5000679269433h406a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-406a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text25" fill="black"><text id="kity_text_219" text-rendering="inherit" font-size="14" dy=".8em" y="1562.400067996553" x="254.5000377073884">24.判断字符串以字母开头，后面字母数字下划线，长度6-30</text></g></g><g id="minder_node26"><g id="node_expander25" style="cursor: pointer;" display="none"><path id="kity_path_230" fill="white" stroke="gray" d="M233.50003650039434,1637.5000708773732A6,6,0,1,1,221.50003650039434,1637.5000708773732A6,6,0,1,1,233.50003650039434,1637.5000708773732"></path><path id="kity_path_231" fill="none" stroke="gray"></path></g><path id="node_outline26" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,1624.5000708773732h338a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-338a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text26" fill="black"><text id="kity_text_227" text-rendering="inherit" font-size="14" dy=".8em" y="1628.4000709469829" x="254.5000377073884">25.手写字符串的trim 方法，保证浏览器的兼容性</text></g></g><g id="minder_node27"><g id="node_expander26" style="cursor: pointer;" display="none"><path id="kity_path_238" fill="white" stroke="gray" d="M233.50003650039434,1703.5000738278031A6,6,0,1,1,221.50003650039434,1703.5000738278031A6,6,0,1,1,233.50003650039434,1703.5000738278031"></path><path id="kity_path_239" fill="none" stroke="gray"></path></g><path id="node_outline27" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,1690.5000738278031h236a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-236a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text27" fill="black"><text id="kity_text_235" text-rendering="inherit" font-size="14" dy=".8em" y="1694.4000738974128" x="254.5000377073884">26.如何获取多个数字中的最大值</text></g></g><g id="minder_node28"><g id="node_expander27" style="cursor: pointer;" display="none"><path id="kity_path_246" fill="white" stroke="gray" d="M233.50003650039434,1769.500076778233A6,6,0,1,1,221.50003650039434,1769.500076778233A6,6,0,1,1,233.50003650039434,1769.500076778233"></path><path id="kity_path_247" fill="none" stroke="gray"></path></g><path id="node_outline28" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,1756.500076778233h184a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-184a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text28" fill="black"><text id="kity_text_243" text-rendering="inherit" font-size="14" dy=".8em" y="1760.4000768478427" x="254.5000377073884">27.如何用JS 实现继承？</text></g></g><g id="minder_node29"><g id="node_expander28" style="cursor: pointer;" display="none"><path id="kity_path_254" fill="white" stroke="gray" d="M233.50003650039434,1835.500079728663A6,6,0,1,1,221.50003650039434,1835.500079728663A6,6,0,1,1,233.50003650039434,1835.500079728663"></path><path id="kity_path_255" fill="none" stroke="gray"></path></g><path id="node_outline29" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,1822.500079728663h208a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-208a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text29" fill="black"><text id="kity_text_251" text-rendering="inherit" font-size="14" dy=".8em" y="1826.4000797982726" x="254.5000377073884">28.如何捕获js 程序中的异常</text></g></g><g id="minder_node30"><g id="node_expander29" style="cursor: pointer;" display="none"><path id="kity_path_262" fill="white" stroke="gray" d="M233.50003650039434,1901.5000826790929A6,6,0,1,1,221.50003650039434,1901.5000826790929A6,6,0,1,1,233.50003650039434,1901.5000826790929"></path><path id="kity_path_263" fill="none" stroke="gray"></path></g><path id="node_outline30" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,1888.5000826790929h138a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-138a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text30" fill="black"><text id="kity_text_259" text-rendering="inherit" font-size="14" dy=".8em" y="1892.4000827487025" x="254.5000377073884">29.什么是json？</text></g></g><g id="minder_node31"><g id="node_expander30" style="cursor: pointer;" display="none"><path id="kity_path_270" fill="white" stroke="gray" d="M233.50003650039434,1967.5000856295228A6,6,0,1,1,221.50003650039434,1967.5000856295228A6,6,0,1,1,233.50003650039434,1967.5000856295228"></path><path id="kity_path_271" fill="none" stroke="gray"></path></g><path id="node_outline31" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,1954.5000856295228h203a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-203a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text31" fill="black"><text id="kity_text_267" text-rendering="inherit" font-size="14" dy=".8em" y="1958.4000856991324" x="254.5000377073884">30.获取当前页面的url 参数</text></g></g><g id="minder_node32"><g id="node_expander31" style="cursor: pointer;" display="none"><path id="kity_path_278" fill="white" stroke="gray" d="M233.50003650039434,2033.5000885799527A6,6,0,1,1,221.50003650039434,2033.5000885799527A6,6,0,1,1,233.50003650039434,2033.5000885799527"></path><path id="kity_path_279" fill="none" stroke="gray"></path></g><path id="node_outline32" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,2020.5000885799527h202a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-202a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text32" fill="black"><text id="kity_text_275" text-rendering="inherit" font-size="14" dy=".8em" y="2024.4000886495623" x="254.5000377073884">31.将url 参数解析为js 对象</text></g></g><g id="minder_node33"><g id="node_expander32" style="cursor: pointer;" display="none"><path id="kity_path_286" fill="white" stroke="gray" d="M233.50003650039434,2099.5000915303826A6,6,0,1,1,221.50003650039434,2099.5000915303826A6,6,0,1,1,233.50003650039434,2099.5000915303826"></path><path id="kity_path_287" fill="none" stroke="gray"></path></g><path id="node_outline33" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,2086.5000915303826h293a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-293a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text33" fill="black"><text id="kity_text_283" text-rendering="inherit" font-size="14" dy=".8em" y="2090.4000915999923" x="254.5000377073884">32.手写数组flatern，考虑多层级【考过】</text></g></g><g id="minder_node34"><g id="node_expander33" style="cursor: pointer;" display="none"><path id="kity_path_294" fill="white" stroke="gray" d="M233.50003650039434,2165.5000944808125A6,6,0,1,1,221.50003650039434,2165.5000944808125A6,6,0,1,1,233.50003650039434,2165.5000944808125"></path><path id="kity_path_295" fill="none" stroke="gray"></path></g><path id="node_outline34" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,2152.5000944808125h110a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-110a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text34" fill="black"><text id="kity_text_291" text-rendering="inherit" font-size="14" dy=".8em" y="2156.400094550422" x="254.5000377073884">33.数组去重</text></g></g><g id="minder_node35"><g id="node_expander34" style="cursor: pointer;" display="none"><path id="kity_path_302" fill="white" stroke="gray" d="M233.50003650039434,2231.5000974312425A6,6,0,1,1,221.50003650039434,2231.5000974312425A6,6,0,1,1,233.50003650039434,2231.5000974312425"></path><path id="kity_path_303" fill="none" stroke="gray"></path></g><path id="node_outline35" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,2218.5000974312425h124a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-124a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text35" fill="black"><text id="kity_text_299" text-rendering="inherit" font-size="14" dy=".8em" y="2222.400097500852" x="254.5000377073884">34.手写深拷贝</text></g></g><g id="minder_node36"><g id="node_expander35" style="cursor: pointer;" display="none"><path id="kity_path_310" fill="white" stroke="gray" d="M233.50003650039434,2297.5001003816724A6,6,0,1,1,221.50003650039434,2297.5001003816724A6,6,0,1,1,233.50003650039434,2297.5001003816724"></path><path id="kity_path_311" fill="none" stroke="gray"></path></g><path id="node_outline36" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M237.5000377073884,2284.5001003816724h293a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-293a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text36" fill="black"><text id="kity_text_307" text-rendering="inherit" font-size="14" dy=".8em" y="2288.400100451282" x="254.5000377073884">35.介绍一下 RAF requestAnimateFrame</text></g></g><g id="minder_node37"><g id="node_expander36" style="cursor: pointer;" display="none"><path id="kity_path_318" fill="white" stroke="gray" d="M233.50003650039434,2363.5001033321023A6,6,0,1,1,221.50003650039434,2363.5001033321023A6,6,0,1,1,233.50003650039434,2363.5001033321023"></path><path id="kity_path_319" fill="none" stroke="gray"></path></g><path id="node_outline37" fill="rgb(238, 243, 246)" stroke="rgb(57, 80, 96)" d="M237.5000377073884,2350.5001033321023h306a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-306a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="3"></path><g id="node_text37" fill="black"><text id="kity_text_315" text-rendering="inherit" font-size="14" dy=".8em" y="2354.400103401712" x="254.5000377073884">36.前端性能优化？一般从哪几个方面考虑？</text></g></g></g></g></svg>